{"mappings":"ACAA,SAAS,gBAAgB,CAAC,mBAAoB,KAC1C,IAAM,EAAW,SAAS,gBAAgB,CAAC,oBAgBrC,EAAW,IAAI,qBARI,CAAC,EAAS,KAC/B,EAAQ,OAAO,CAAC,AAAA,IACR,EAAM,cAAc,EACpB,EAAM,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,UAEnC,EACJ,EAZwB,CACpB,KAAM,KACN,WAAY,MACZ,UAAW,EACf,GAYA,EAAS,OAAO,CAAC,AAAA,IACb,EAAS,OAAO,CAAC,EACrB,GAIA,AAFiB,SAAS,gBAAgB,CAAC,sBAElC,OAAO,CAAC,AAAA,IACb,EAAK,gBAAgB,CAAC,QAAS,SAAU,CAAC,EACtC,IAAM,EAAO,IAAI,CAAC,YAAY,CAAC,QAC/B,GAAI,EAAK,UAAU,CAAC,KAAM,CACtB,IAAM,EAAW,EAAK,SAAS,CAAC,GACV,SAAS,cAAc,CAAC,EAIlD,CACJ,EACJ,GAGA,IAAM,EAAY,SAAS,aAAa,CAAC,eACnC,EAAgB,SAAS,aAAa,CAAC,mBAc7C,SAAS,gBAAgB,CAAC,YAZ1B,SAAsB,CAAC,EACnB,GAAM,CAAE,QAAS,CAAC,CAAE,QAAS,CAAC,CAAE,CAAG,CAEnC,CAAA,EAAU,KAAK,CAAC,IAAI,CAAG,CAAA,EAAG,EAAE,EAAE,CAAC,CAC/B,EAAU,KAAK,CAAC,GAAG,CAAG,CAAA,EAAG,EAAE,EAAE,CAAC,CAE9B,WAAW,KACP,EAAc,KAAK,CAAC,IAAI,CAAG,CAAA,EAAG,EAAE,EAAE,CAAC,CACnC,EAAc,KAAK,CAAC,GAAG,CAAG,CAAA,EAAG,EAAE,EAAE,CAAC,AACtC,EAAG,GACP,GAIA,SAAS,gBAAgB,CAAC,YAAa,KACnC,EAAU,SAAS,CAAC,GAAG,CAAC,UACxB,EAAc,SAAS,CAAC,GAAG,CAAC,SAChC,GAEA,SAAS,gBAAgB,CAAC,UAAW,KACjC,EAAU,SAAS,CAAC,MAAM,CAAC,UAC3B,EAAc,SAAS,CAAC,MAAM,CAAC,SACnC,GAEA,SAAS,gBAAgB,CAAC,aAAc,KACpC,EAAU,KAAK,CAAC,OAAO,CAAG,IAC1B,EAAc,KAAK,CAAC,OAAO,CAAG,GAClC,GAEA,SAAS,gBAAgB,CAAC,aAAc,KACpC,EAAU,KAAK,CAAC,OAAO,CAAG,IAC1B,EAAc,KAAK,CAAC,OAAO,CAAG,GAClC,EACJ","sources":["<anon>","script.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', ()=>{\n    const sections = document.querySelectorAll('.content-section');\n    const observerOptions = {\n        root: null,\n        rootMargin: '0px',\n        threshold: 0.1\n    };\n    const observerCallback = (entries, observer)=>{\n        entries.forEach((entry)=>{\n            if (entry.isIntersecting) entry.target.classList.add('visible');\n        });\n    };\n    const observer = new IntersectionObserver(observerCallback, observerOptions);\n    sections.forEach((section)=>{\n        observer.observe(section);\n    });\n    const navLinks = document.querySelectorAll('.main-header nav a');\n    navLinks.forEach((link)=>{\n        link.addEventListener('click', function(e) {\n            const href = this.getAttribute('href');\n            if (href.startsWith('#')) {\n                const targetId = href.substring(1);\n                const targetElement = document.getElementById(targetId);\n                targetElement;\n            }\n        });\n    });\n    // --- Cursor Logic ---\n    const cursorDot = document.querySelector('.cursor-dot');\n    const cursorOutline = document.querySelector('.cursor-outline');\n    function updateCursor(e) {\n        const { clientX: x, clientY: y } = e;\n        cursorDot.style.left = `${x}px`;\n        cursorDot.style.top = `${y}px`;\n        setTimeout(()=>{\n            cursorOutline.style.left = `${x}px`;\n            cursorOutline.style.top = `${y}px`;\n        }, 50);\n    }\n    document.addEventListener('mousemove', updateCursor);\n    document.addEventListener('mousedown', ()=>{\n        cursorDot.classList.add('active');\n        cursorOutline.classList.add('active');\n    });\n    document.addEventListener('mouseup', ()=>{\n        cursorDot.classList.remove('active');\n        cursorOutline.classList.remove('active');\n    });\n    document.addEventListener('mouseleave', ()=>{\n        cursorDot.style.opacity = '0';\n        cursorOutline.style.opacity = '0';\n    });\n    document.addEventListener('mouseenter', ()=>{\n        cursorDot.style.opacity = '1';\n        cursorOutline.style.opacity = '1';\n    });\n});\n\n//# sourceMappingURL=ClinePortfolio.0bc15a8f.js.map\n","document.addEventListener('DOMContentLoaded', () => {\r\n    const sections = document.querySelectorAll('.content-section');\r\n\r\n    const observerOptions = {\r\n        root: null,\r\n        rootMargin: '0px',\r\n        threshold: 0.1\r\n    };\r\n\r\n    const observerCallback = (entries, observer) => {\r\n        entries.forEach(entry => {\r\n            if (entry.isIntersecting) {\r\n                entry.target.classList.add('visible');\r\n            }\r\n        });\r\n    };\r\n\r\n    const observer = new IntersectionObserver(observerCallback, observerOptions);\r\n\r\n    sections.forEach(section => {\r\n        observer.observe(section);\r\n    });\r\n\r\n    const navLinks = document.querySelectorAll('.main-header nav a');\r\n\r\n    navLinks.forEach(link => {\r\n        link.addEventListener('click', function (e) {\r\n            const href = this.getAttribute('href');\r\n            if (href.startsWith('#')) {\r\n                const targetId = href.substring(1);\r\n                const targetElement = document.getElementById(targetId);\r\n                if (targetElement) {\r\n                    // CSS handles smooth scroll\r\n                }\r\n            }\r\n        });\r\n    });\r\n\r\n    // --- Cursor Logic ---\r\n    const cursorDot = document.querySelector('.cursor-dot');\r\n    const cursorOutline = document.querySelector('.cursor-outline');\r\n\r\n    function updateCursor(e) {\r\n        const { clientX: x, clientY: y } = e;\r\n\r\n        cursorDot.style.left = `${x}px`;\r\n        cursorDot.style.top = `${y}px`;\r\n\r\n        setTimeout(() => {\r\n            cursorOutline.style.left = `${x}px`;\r\n            cursorOutline.style.top = `${y}px`;\r\n        }, 50);\r\n    }\r\n\r\n    document.addEventListener('mousemove', updateCursor);\r\n\r\n    document.addEventListener('mousedown', () => {\r\n        cursorDot.classList.add('active');\r\n        cursorOutline.classList.add('active');\r\n    });\r\n\r\n    document.addEventListener('mouseup', () => {\r\n        cursorDot.classList.remove('active');\r\n        cursorOutline.classList.remove('active');\r\n    });\r\n\r\n    document.addEventListener('mouseleave', () => {\r\n        cursorDot.style.opacity = '0';\r\n        cursorOutline.style.opacity = '0';\r\n    });\r\n\r\n    document.addEventListener('mouseenter', () => {\r\n        cursorDot.style.opacity = '1';\r\n        cursorOutline.style.opacity = '1';\r\n    });\r\n});\r\n"],"names":["document","addEventListener","sections","querySelectorAll","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","target","classList","add","root","rootMargin","threshold","section","observe","navLinks","link","e","href","getAttribute","startsWith","targetId","substring","getElementById","cursorDot","querySelector","cursorOutline","clientX","x","clientY","y","style","left","top","setTimeout","remove","opacity"],"version":3,"file":"ClinePortfolio.0bc15a8f.js.map"}